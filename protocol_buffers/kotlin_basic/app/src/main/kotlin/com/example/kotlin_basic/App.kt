/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.example.kotlin_basic

import com.example.kotlin_basic.proto.AddressBook
import com.example.kotlin_basic.proto.addressBook
import com.example.kotlin_basic.proto.copy
import kotlin.io.path.Path
import kotlin.io.path.exists
import kotlin.io.path.inputStream
import kotlin.io.path.outputStream
import kotlin.system.exitProcess

fun main(args: Array<String>) {
    write(args.toList())
    read(args.toList())
}

fun read(args: List<String>) {
    if (args.size != 1) {
        // this is wrong. but whatever just a tutorial
        println("usage: list_person ADDRESS_BOOK_FILE")
        exitProcess(-1)
    }
    Path(args.single()).inputStream().use {
        readAddressBook(AddressBook.newBuilder().mergeFrom(it).build())
    }
}

private fun write(args: List<String>) {
    if (args.size != 1) {
        println("usage: add_person ADDRESS_BOOK_FILE")
        exitProcess(-1)
    }
    val path = Path(args.single())
    val initialAddressBook = if (!path.exists()) {
        println("file not found. creating new file.")
        addressBook { }
    } else {
        path.inputStream().use {
            AddressBook.newBuilder().mergeFrom(it).build()
        }
    }

    path.outputStream().use {
        initialAddressBook.copy { people += promptPerson() }.writeTo(it)
    }
}
